import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    Application, CallbackQueryHandler, CommandHandler,
    ConversationHandler, ContextTypes, MessageHandler, filters
)

from keep_alive import keep_alive  # –ó–∞–ø—É—Å–∫–∞–µ–º –≤–µ–±-—Å–µ—Ä–≤–µ—Ä
keep_alive()

# –õ–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –°—Ç–∞–Ω –±–æ—Ç–∞
MENU, TOPIC, QUIZ = range(3)

# –¢–µ–º–∏
topic_ids = {
    "t1": "–í–∑–∞—î–º–Ω–µ —Ä–æ–∑–º—ñ—â–µ–Ω–Ω—è –ø—Ä—è–º–∏—Ö —É –ø—Ä–æ—Å—Ç–æ—Ä—ñ",
    "t2": "–í–∑–∞—î–º–Ω–µ —Ä–æ–∑–º—ñ—â–µ–Ω–Ω—è –ø—Ä—è–º–æ—ó —ñ –ø–ª–æ—â–∏–Ω–∏",
    "t3": "–§–æ—Ä–º—É–ª–∏ —ñ –≥–µ–æ–º–µ—Ç—Ä–∏—á–Ω—ñ —É–º–æ–≤–∏",
    "t4": "–í–∑–∞—î–º–Ω–µ —Ä–æ–∑–º—ñ—â–µ–Ω–Ω—è –ø–ª–æ—â–∏–Ω —É –ø—Ä–æ—Å—Ç–æ—Ä—ñ",
    "t5": "–ü–∞—Ä–∞–ª–µ–ª—å–Ω—ñ—Å—Ç—å –ø—Ä—è–º–∏—Ö –≤ –ø–ª–æ—â–∏–Ω —É –ø—Ä–æ—Å—Ç–æ—Ä—ñ",
    "t6": "–ü–∞—Ä–∞–ª–µ–ª—å–Ω—ñ—Å—Ç—å –¥–≤–æ—Ö –ø–ª–æ—â–∏–Ω",
    "t7": "–í–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ –ø–∞—Ä–∞–ª–µ–ª—å–Ω–∏—Ö –ø—Ä—è–º–∏—Ö —É –ø—Ä–æ—Å—Ç–æ—Ä—ñ"
}

topics = {
    "t1": ("–í–∑–∞—î–º–Ω–µ —Ä–æ–∑–º—ñ—â–µ–Ω–Ω—è –ø—Ä—è–º–∏—Ö —É –ø—Ä–æ—Å—Ç–æ—Ä—ñ", None, """<b>1. –ü–µ—Ä–µ—Ç–∏–Ω–∞—é—Ç—å—Å—è</b>
- –ú–∞—é—Ç—å –æ–¥–Ω—É —Å–ø—ñ–ª—å–Ω—É —Ç–æ—á–∫—É.
- –õ–µ–∂–∞—Ç—å –≤ –æ–¥–Ω—ñ–π –ø–ª–æ—â–∏–Ω—ñ.
- –ö—É—Ç –º—ñ–∂ –ø—Ä—è–º–∏–º–∏ ‚Äî —Ü–µ –∫—É—Ç –º—ñ–∂ –Ω–∞–ø—Ä—è–º–Ω–∏–º–∏ –≤–µ–∫—Ç–æ—Ä–∞–º–∏.

<b>2. –ü–∞—Ä–∞–ª–µ–ª—å–Ω—ñ</b>
- –ù–µ –ø–µ—Ä–µ—Ç–∏–Ω–∞—é—Ç—å—Å—è, –∞–ª–µ –≤ –æ–¥–Ω—ñ–π –ø–ª–æ—â–∏–Ω—ñ.
- –ö–æ–ª—ñ–Ω–µ–∞—Ä–Ω—ñ –Ω–∞–ø—Ä—è–º–Ω—ñ –≤–µ–∫—Ç–æ—Ä–∏.
- –í—ñ–¥—Å—Ç–∞–Ω—å –º—ñ–∂ –ø—Ä—è–º–∏–º–∏ —Å—Ç–∞–ª–∞.

<b>3. –ó–±—ñ–≥–∞—é—Ç—å—Å—è</b>
- –ù–µ—Å–∫—ñ–Ω—á–µ–Ω–Ω–æ –±–∞–≥–∞—Ç–æ —Å–ø—ñ–ª—å–Ω–∏—Ö —Ç–æ—á–æ–∫.
- –¶–µ –æ–¥–Ω–∞ —ñ —Ç–∞ —Å–∞–º–∞ –ø—Ä—è–º–∞.
- –í–µ–∫—Ç–æ—Ä–∏ –æ–¥–Ω—ñ—î—ó ‚Äî –∫—Ä–∞—Ç–Ω—ñ –≤–µ–∫—Ç–æ—Ä—É —ñ–Ω—à–æ—ó.

<b>4. –°–∫—Ä–µ—â—É—é—Ç—å—Å—è</b>
- –ù–µ–º–∞—î –∂–æ–¥–Ω–æ—ó —Å–ø—ñ–ª—å–Ω–æ—ó —Ç–æ—á–∫–∏.
- –ù–µ –ª–µ–∂–∞—Ç—å –≤ –æ–¥–Ω—ñ–π –ø–ª–æ—â–∏–Ω—ñ.
- –ü—Ä–∏–∫–ª–∞–¥ ‚Äî —Ä–µ–±—Ä–∞ –ø—Ä—è–º–æ–∫—É—Ç–Ω–æ–≥–æ –ø–∞—Ä–∞–ª–µ–ª–µ–ø—ñ–ø–µ–¥–∞."""),

    "t2": ("–í–∑–∞—î–º–Ω–µ —Ä–æ–∑–º—ñ—â–µ–Ω–Ω—è –ø—Ä—è–º–æ—ó —ñ –ø–ª–æ—â–∏–Ω–∏", None, """<b>1. –ü—Ä—è–º–∞ –ª–µ–∂–∏—Ç—å —É –ø–ª–æ—â–∏–Ω—ñ</b>
- –£—Å—ñ —Ç–æ—á–∫–∏ –ø—Ä—è–º–æ—ó –Ω–∞–ª–µ–∂–∞—Ç—å –ø–ª–æ—â–∏–Ω—ñ.
- –ù–∞–ø—Ä—è–º–Ω–∏–π –≤–µ–∫—Ç–æ—Ä –Ω–∞–ª–µ–∂–∏—Ç—å –ø–ª–æ—â–∏–Ω—ñ.

<b>2. –ü–µ—Ä–µ—Ç–∏–Ω–∞—î –ø–ª–æ—â–∏–Ω—É</b>
- –Ñ–¥–∏–Ω–∞ —Ç–æ—á–∫–∞ –ø–µ—Ä–µ—Ç–∏–Ω—É.
- –ù–µ –ª–µ–∂–∏—Ç—å —É –ø–ª–æ—â–∏–Ω—ñ.
- –í–µ–∫—Ç–æ—Ä –Ω–µ –∫–æ–ª—ñ–Ω–µ–∞—Ä–Ω–∏–π –ø–ª–æ—â–∏–Ω—ñ.

<b>3. –ü–∞—Ä–∞–ª–µ–ª—å–Ω–∞ –ø–ª–æ—â–∏–Ω—ñ</b>
- –ù–µ –º–∞—î —Å–ø—ñ–ª—å–Ω–∏—Ö —Ç–æ—á–æ–∫.
- –í–µ–∫—Ç–æ—Ä –ø—Ä—è–º–æ—ó –ø–∞—Ä–∞–ª–µ–ª—å–Ω–∏–π –ø–ª–æ—â–∏–Ω—ñ."""),

    "t3": ("–§–æ—Ä–º—É–ª–∏ —ñ –≥–µ–æ–º–µ—Ç—Ä–∏—á–Ω—ñ —É–º–æ–≤–∏", None, """- –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å–∫—Ä–µ—â—É–≤–∞–Ω–Ω—è: –≤–µ–∫—Ç–æ—Ä–Ω–µ —Ç–∞ –∑–º—ñ—à–∞–Ω–µ –¥–æ–±—É—Ç–∫–∏.
- –ü–µ—Ä–µ—Ç–∏–Ω –ø—Ä—è–º–æ—ó —ñ –ø–ª–æ—â–∏–Ω–∏: <i>A + tv</i> —Ç–∞ –Ω–æ—Ä–º–∞–ª—å –ø–ª–æ—â–∏–Ω–∏ <i>n</i>."""),

    "t4": ("–í–∑–∞—î–º–Ω–µ —Ä–æ–∑–º—ñ—â–µ–Ω–Ω—è –ø–ª–æ—â–∏–Ω —É –ø—Ä–æ—Å—Ç–æ—Ä—ñ", "image4.jpg", """- <b>–ü–µ—Ä–µ—Ç–∏–Ω–∞—é—Ç—å—Å—è</b>: –º–∞—é—Ç—å —Å–ø—ñ–ª—å–Ω—É –ø—Ä—è–º—É.
- <b>–ü–∞—Ä–∞–ª–µ–ª—å–Ω—ñ</b>: –Ω–µ –º–∞—é—Ç—å —Å–ø—ñ–ª—å–Ω–∏—Ö —Ç–æ—á–æ–∫ –∞–±–æ –∑–±—ñ–≥–∞—é—Ç—å—Å—è.

<b>–í–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ:</b>
1. –ü–µ—Ä–µ—Ç–∏–Ω —Ç—Ä–µ—Ç—å–æ—é –ø–ª–æ—â–∏–Ω–æ—é ‚Äî –¥–∞—î –ø–∞—Ä–∞–ª–µ–ª—å–Ω—ñ –ø—Ä—è–º—ñ.
2. –í—ñ–¥—Ä—ñ–∑–∫–∏ –º—ñ–∂ –ø–ª–æ—â–∏–Ω–∞–º–∏ —Ä—ñ–≤–Ω—ñ."""),

    "t5": ("–ü–∞—Ä–∞–ª–µ–ª—å–Ω—ñ—Å—Ç—å –ø—Ä—è–º–∏—Ö –≤ –ø–ª–æ—â–∏–Ω —É –ø—Ä–æ—Å—Ç–æ—Ä—ñ", "image5.jpg", """- –ù–µ –º–∞—é—Ç—å —Å–ø—ñ–ª—å–Ω–∏—Ö —Ç–æ—á–æ–∫.
- –ö–æ–ª—ñ–Ω–µ–∞—Ä–Ω—ñ –≤–µ–∫—Ç–æ—Ä–∏.
- –õ–µ–∂–∞—Ç—å –≤ –æ–¥–Ω—ñ–π –ø–ª–æ—â–∏–Ω—ñ.
- –í–µ–∫—Ç–æ—Ä –Ω–µ –ø–µ—Ä–ø–µ–Ω–¥–∏–∫—É–ª—è—Ä–Ω–∏–π –ø–ª–æ—â–∏–Ω—ñ.
- –ú–∞—î –æ–¥–Ω—É —Ç–æ—á–∫—É –ø–µ—Ä–µ—Ç–∏–Ω—É."""),

    "t6": ("–ü–∞—Ä–∞–ª–µ–ª—å–Ω—ñ—Å—Ç—å –¥–≤–æ—Ö –ø–ª–æ—â–∏–Ω", "image6.jpg", """- –û–∑–Ω–∞–∫–∞: –ø—Ä—è–º—ñ –∑ –ø–ª–æ—â–∏–Ω–∏ A –ø–∞—Ä–∞–ª–µ–ª—å–Ω—ñ –ø—Ä—è–º–∏–º —É –ø–ª–æ—â–∏–Ω—ñ B.

<b>–í–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ:</b>
1. –ü—Ä—è–º—ñ –ø–µ—Ä–µ—Ç–∏–Ω—É –∑ —Ç—Ä–µ—Ç—å–æ—é –ø–ª–æ—â–∏–Ω–æ—é ‚Äî –ø–∞—Ä–∞–ª–µ–ª—å–Ω—ñ.
2. –í—ñ–¥—Ä—ñ–∑–∫–∏ –º—ñ–∂ –ø–ª–æ—â–∏–Ω–∞–º–∏ —Ä—ñ–≤–Ω—ñ."""),

    "t7": ("–í–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ –ø–∞—Ä–∞–ª–µ–ª—å–Ω–∏—Ö –ø—Ä—è–º–∏—Ö —É –ø—Ä–æ—Å—Ç–æ—Ä—ñ", "image7.jpg", """- –ü—Ä—è–º—ñ –∑ –ø–∞—Ä–∞–ª–µ–ª—å–Ω–∏—Ö –ø–ª–æ—â–∏–Ω, –ø–µ—Ä–µ—Ç–Ω—É—Ç–∏—Ö —Ç—Ä–µ—Ç—å–æ—é ‚Äî –ø–∞—Ä–∞–ª–µ–ª—å–Ω—ñ.
- –Ø–∫—â–æ –æ–±–∏–¥–≤—ñ –ø—Ä—è–º—ñ –ø–∞—Ä–∞–ª–µ–ª—å–Ω—ñ —Ç—Ä–µ—Ç—ñ–π ‚Äî –≤–æ–Ω–∏ –ø–∞—Ä–∞–ª–µ–ª—å–Ω—ñ –º—ñ–∂ —Å–æ–±–æ—é.""")
}

quiz_questions = {
    "t1": ("–Ø–∫–∞ –æ–∑–Ω–∞–∫–∞ —Ç–æ–≥–æ, —â–æ –ø—Ä—è–º—ñ –ø–µ—Ä–µ—Ç–∏–Ω–∞—é—Ç—å—Å—è?", "–º–∞—é—Ç—å –æ–¥–Ω—É —Å–ø—ñ–ª—å–Ω—É —Ç–æ—á–∫—É"),
    "t2": ("–ö–æ–ª–∏ –ø—Ä—è–º–∞ –ª–µ–∂–∏—Ç—å —É –ø–ª–æ—â–∏–Ω—ñ?", "—É—Å—ñ —Ç–æ—á–∫–∏ –ø—Ä—è–º–æ—ó –Ω–∞–ª–µ–∂–∞—Ç—å –ø–ª–æ—â–∏–Ω—ñ"),
    "t3": ("–Ø–∫ –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —Å–∫—Ä–µ—â—É–≤–∞–Ω–Ω—è –ø—Ä—è–º–∏—Ö?", "–≤–µ–∫—Ç–æ—Ä–Ω–µ —Ç–∞ –∑–º—ñ—à–∞–Ω–µ –¥–æ–±—É—Ç–∫–∏"),
    "t4": ("–Ø–∫–∞ —É–º–æ–≤–∞ –ø–µ—Ä–µ—Ç–∏–Ω—É –ø–ª–æ—â–∏–Ω?", "–º–∞—é—Ç—å —Å–ø—ñ–ª—å–Ω—É –ø—Ä—è–º—É"),
    "t5": ("–û–∑–Ω–∞–∫–∞ –ø–∞—Ä–∞–ª–µ–ª—å–Ω–æ—Å—Ç—ñ –ø—Ä—è–º–∏—Ö?", "–≤–µ–∫—Ç–æ—Ä–∏ –∫–æ–ª—ñ–Ω–µ–∞—Ä–Ω—ñ"),
    "t6": ("–ö–æ–ª–∏ –ø–ª–æ—â–∏–Ω–∏ –ø–∞—Ä–∞–ª–µ–ª—å–Ω—ñ?", "–ø—Ä—è–º—ñ –ø–∞—Ä–∞–ª–µ–ª—å–Ω—ñ –≤ –æ–±–æ—Ö –ø–ª–æ—â–∏–Ω–∞—Ö"),
    "t7": ("–ö–æ–ª–∏ –¥–≤—ñ –ø—Ä—è–º—ñ –ø–∞—Ä–∞–ª–µ–ª—å–Ω—ñ –º—ñ–∂ —Å–æ–±–æ—é?", "–æ–±–∏–¥–≤—ñ –ø–∞—Ä–∞–ª–µ–ª—å–Ω—ñ —Ç—Ä–µ—Ç—ñ–π –ø—Ä—è–º—ñ–π")
}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [[InlineKeyboardButton("‚ñ∂Ô∏è –ü–æ—á–∞—Ç–∏ –Ω–∞–≤—á–∞–Ω–Ω—è", callback_data="start_learning")]]
    await update.message.reply_text(
        "–ü—Ä–∏–≤—ñ—Ç! –Ø –±–æ—Ç –¥–ª—è –≤–∏–≤—á–µ–Ω–Ω—è –≥–µ–æ–º–µ—Ç—Ä—ñ—ó. –ù–∞—Ç–∏—Å–Ω–∏ –∫–Ω–æ–ø–∫—É ‚¨áÔ∏è",
        reply_markup=InlineKeyboardMarkup(keyboard)
    )
    return MENU

async def menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    keyboard = [
        [InlineKeyboardButton("üîπ –í–∑–∞—î–º–Ω–µ —Ä–æ–∑–º—ñ—â–µ–Ω–Ω—è –ø—Ä—è–º–∏—Ö —É –ø—Ä–æ—Å—Ç–æ—Ä—ñ", callback_data="t1")],
        [InlineKeyboardButton("üîπ –í–∑–∞—î–º–Ω–µ —Ä–æ–∑–º—ñ—â–µ–Ω–Ω—è –ø—Ä—è–º–æ—ó —ñ –ø–ª–æ—â–∏–Ω–∏", callback_data="t2")],
        [InlineKeyboardButton("üîπ –§–æ—Ä–º—É–ª–∏ —ñ –≥–µ–æ–º–µ—Ç—Ä–∏—á–Ω—ñ —É–º–æ–≤–∏", callback_data="t3")],
        [InlineKeyboardButton("üîπ –í–∑–∞—î–º–Ω–µ —Ä–æ–∑–º—ñ—â–µ–Ω–Ω—è –ø–ª–æ—â–∏–Ω —É –ø—Ä–æ—Å—Ç–æ—Ä—ñ", callback_data="t4")],
        [InlineKeyboardButton("üîπ –ü–∞—Ä–∞–ª–µ–ª—å–Ω—ñ—Å—Ç—å –ø—Ä—è–º–∏—Ö –≤ –ø–ª–æ—â–∏–Ω —É –ø—Ä–æ—Å—Ç–æ—Ä—ñ", callback_data="t5")],
        [InlineKeyboardButton("üîπ –ü–∞—Ä–∞–ª–µ–ª—å–Ω—ñ—Å—Ç—å –¥–≤–æ—Ö –ø–ª–æ—â–∏–Ω", callback_data="t6")],
        [InlineKeyboardButton("üîπ –í–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ –ø–∞—Ä–∞–ª–µ–ª—å–Ω–∏—Ö –ø—Ä—è–º–∏—Ö —É –ø—Ä–æ—Å—Ç–æ—Ä—ñ", callback_data="t7")],
        [InlineKeyboardButton("üß™ –ü–æ—á–∞—Ç–∏ —Ç–µ—Å—Ç", callback_data="quiz")]
    ]

    markup = InlineKeyboardMarkup(keyboard)

    try:
        # –¢—ñ–ª—å–∫–∏ —è–∫—â–æ —î —Ç–µ–∫—Å—Ç, –º–æ–∂–Ω–∞ —Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏
        if query.message and query.message.text:
            await query.edit_message_text("–û–±–µ—Ä—ñ—Ç—å —Ç–µ–º—É –¥–ª—è –≤–∏–≤—á–µ–Ω–Ω—è:", reply_markup=markup)
        else:
            # –Ø–∫—â–æ —Ç–µ–∫—Å—Ç—É –Ω–µ–º–∞—î ‚Äî –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –Ω–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
            await query.message.reply_text("–û–±–µ—Ä—ñ—Ç—å —Ç–µ–º—É –¥–ª—è –≤–∏–≤—á–µ–Ω–Ω—è:", reply_markup=markup)
    except Exception as e:
        print(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")
        await query.message.reply_text("–û–±–µ—Ä—ñ—Ç—å —Ç–µ–º—É –¥–ª—è –≤–∏–≤—á–µ–Ω–Ω—è:", reply_markup=markup)

    return MENU


async def show_topic(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    topic_key = query.data

    if topic_key not in topics:
        await query.edit_message_text("–û–±—Ä–∞–Ω–æ –Ω–µ–≤—ñ—Ä–Ω—É —Ç–µ–º—É.")
        return MENU

    name, img_filename, description = topics[topic_key]
    text = f"<b>{name}</b>\n\n{description}"

    keyboard = [[InlineKeyboardButton("‚óÄÔ∏è –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å –¥–æ —Ç–µ–º", callback_data="start_learning")]]

    if img_filename:
        with open(f"images/{img_filename}", "rb") as photo:
            await query.message.reply_photo(
                photo=photo,
                caption=text,
                parse_mode="HTML",
                reply_markup=InlineKeyboardMarkup(keyboard)
            )
    else:
        await query.message.reply_text(text, parse_mode="HTML", reply_markup=InlineKeyboardMarkup(keyboard))

    return TOPIC


async def start_quiz(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    context.user_data['quiz'] = iter(quiz_questions.items())
    context.user_data['wrong'] = []
    return await ask_question(update, context)

async def ask_question(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        tid, (question, answer) = next(context.user_data['quiz'])
        context.user_data['current_q'] = (tid, answer)

        text = f"üß† {question}\n\n(–ù–∞–ø–∏—à—ñ—Ç—å –≤—ñ–¥–ø–æ–≤—ñ–¥—å —É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—ñ)"
        if update.callback_query:
            await update.callback_query.edit_message_text(text)
        else:
            await update.message.reply_text(text)

        return QUIZ

    except StopIteration:
        wrong = context.user_data.get('wrong', [])
        if wrong:
            wrong_list = "\n".join(f"üîπ {topic_ids[tid]}" for tid in wrong)
            text = f"–ü–µ—Ä–µ–≥–ª—è–Ω—å —Ü—ñ —Ç–µ–º–∏ —â–µ —Ä–∞–∑:\n{wrong_list}"
        else:
            text = "üéâ –í—ñ—Ç–∞—é! –£—Å—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ."

        if update.callback_query:
            await update.callback_query.edit_message_text(text)
        else:
            await update.message.reply_text(text)

        return ConversationHandler.END

async def handle_answer(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_answer = update.message.text.strip().lower()
    tid, correct_answer = context.user_data['current_q']
    if correct_answer.lower() not in user_answer:
        context.user_data['wrong'].append(tid)
    return await ask_question(update, context)

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ù–∞–≤—á–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –©–∞—Å—Ç–∏!")
    return ConversationHandler.END

if __name__ == '__main__':
    app = Application.builder().token("8125962066:AAHi-aHXVfddpUyfxmsbVpVhjO_XEUH6tCE").build()

    conv_handler = ConversationHandler(
    entry_points=[CommandHandler("start", start)],
    states={
        MENU: [
            CallbackQueryHandler(menu, pattern="^start_learning$"),
            CallbackQueryHandler(show_topic, pattern="^t[1-7]$"),
            CallbackQueryHandler(start_quiz, pattern="^quiz$")
        ],
        TOPIC: [
            CallbackQueryHandler(menu, pattern="^start_learning$")
        ],
        QUIZ: [
            CommandHandler("cancel", cancel),
            MessageHandler(filters.TEXT & ~filters.COMMAND, handle_answer)
        ],
    },
    fallbacks=[CommandHandler("cancel", cancel)],
)



    app.add_handler(conv_handler)
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ")
    app.run_polling()
